##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/util/url.py 1752607604 15205
.___v_desugar_1: Never
.annotations: Never
.re: Never

.typing: Never

.___v_desugar_2: Never
.LocationParseError: Never
.___v_desugar_3 = pyimport "util"
.util = pyimport "util"
.to_str: (x: global::Bytes or Str, encoding: NoneType or Str := NoneType or Str, errors: NoneType or Str := NoneType or Str) -> Str
._NORMALIZABLE_SCHEMES: global::Tuple([{"http"}, {"https"}, {None}])
._PERCENT_RE: Never
._SCHEME_RE: Never
._URI_RE: Never
._IPV4_PAT: {"(?:[0-9]{1,3}\\.){3}[0-9]{1,3}"}
._HEX_PAT: {"[0-9A-Fa-f]{1,4}"}
._LS32_PAT: Str
._subs: global::Dict!({{"hex"}: {"[0-9A-Fa-f]{1,4}"}, {"ls32"}: Str})
._variations: global::List!({"(?:(?:Type_(hex)s:){0,3}Type_(hex)s)?::Type_(hex)s:Type_(ls32)s", "(?:Type_(hex)s)?::(?:Type_(hex)s:){4}Type_(ls32)s", "(?:(?:Type_(hex)s:){0,4}Type_(hex)s)?::Type_(ls32)s", "(?:(?:Type_(hex)s:){0,5}Type_(hex)s)?::Type_(hex)s", "(?:(?:Type_(hex)s:)?Type_(hex)s)?::(?:Type_(hex)s:){3}Type_(ls32)s", "(?:Type_(hex)s:){6}Type_(ls32)s", "::(?:Type_(hex)s:){5}Type_(ls32)s", "(?:(?:Type_(hex)s:){0,6}Type_(hex)s)?::", "(?:(?:Type_(hex)s:){0,2}Type_(hex)s)?::(?:Type_(hex)s:){2}Type_(ls32)s"}, 9)
._UNRESERVED_PAT: {"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._\\-~"}
._IPV6_PAT: Str
._ZONE_ID_PAT: Str
._IPV6_ADDRZ_PAT: Str
._REG_NAME_PAT: {"(?:[^\\[\\]Type_:.?#]|Type_[a-fA-F0-9]{2})*"}
._TARGET_RE: Never
._IPV4_RE: Never
._IPV6_RE: Never
._IPV6_ADDRZ_RE: Never
._BRACELESS_IPV6_ADDRZ_RE: Never
._ZONE_ID_RE: Never
._HOST_PORT_PAT: Str
._HOST_PORT_RE: Never
._UNRESERVED_CHARS: global::Set!(Str, _: Nat)
._SUB_DELIM_CHARS: global::Set!(Str, _: Nat)
._USERINFO_CHARS: Never
._PATH_CHARS: Structural({.__or__ = (self: Never, Obj) -> global::Container(Str)})
._QUERY_CHARS: global::Container(Str)
._FRAGMENT_CHARS: global::Container(Str)

.Url: ClassType
.Url <: Never
.Url.__new__: (cls: Obj, scheme: NoneType or Str := NoneType or Str, auth: NoneType or Str := NoneType or Str, host: NoneType or Str := NoneType or Str, port: NoneType or Int := NoneType or Int, path: NoneType or Str := NoneType or Str, query: NoneType or Str := NoneType or Str, fragment: NoneType or Str := NoneType or Str) -> Never
.Url.hostname : (self: util.url.Url) -> NoneType or Str
.Url.hostname: NoneType or Str
.Url.request_uri : (self: util.url.Url) -> Str
.Url.request_uri: Str
.Url.authority : (self: util.url.Url) -> NoneType or Str
.Url.authority: NoneType or Str
.Url.netloc : (self: util.url.Url) -> NoneType or Str
.Url.netloc: NoneType or Str
.Url.url : (self: util.url.Url) -> Str
.Url.url: Str
.Url.__str__: (self: util.url.Url) -> Str

._encode_invalid_chars: (component: Str, allowed_chars: global::Container(Str)) -> Str
._encode_invalid_chars: (component: NoneType, allowed_chars: global::Container(Str)) -> NoneType
._encode_invalid_chars: (component: NoneType or Str, allowed_chars: global::Container(Str)) -> NoneType or Str
._remove_path_dot_segments: (path: Str) -> Str
._normalize_host: (host: NoneType, scheme: NoneType or Str) -> NoneType
._normalize_host: (host: Str, scheme: NoneType or Str) -> Str
._normalize_host: (host: NoneType or Str, scheme: NoneType or Str) -> NoneType or Str
._idna_encode: (name: Str) -> global::Bytes
._encode_target: (target: Str) -> Str
.parse_url: (url: Str) -> util.url.Url
