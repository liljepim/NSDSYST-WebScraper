##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/util/ssl_.py 1752607604 19786
.___v_desugar_1: Never
.annotations: Never
.hashlib: Never

.hmac: Never

.os: Never

.socket: Never

.sys: Never

.typing: Never

.warnings: Never

.___v_desugar_2: Never
.unhexlify: Never
.___v_desugar_3: Never
.ProxySchemeUnsupported: Never
.SSLError: Never
.___v_desugar_4 = pyimport "url"
.url = pyimport "url"
._BRACELESS_IPV6_ADDRZ_RE: Never
._IPV4_RE: Never
.SSLContext: Never
.SSLTransport: Never
.HAS_NEVER_CHECK_COMMON_NAME: Never
.IS_PYOPENSSL: {False}
.ALPN_PROTOCOLS: Never
._TYPE_VERSION_INFO: {global::Tuple(global::Tuple([{Int}, {Int}, {Int}, {Str}, {Int}]))}
.HASHFUNC_MAP: Never
._is_bpo_43522_fixed: (implementation_name: Str, version_info: Obj, pypy_version_info: Obj) -> Bool
._is_has_never_check_common_name_reliable: (openssl_version: Str, openssl_version_number: Int, implementation_name: Str, version_info: Obj, pypy_version_info: Obj) -> Bool

.___v_desugar_5: Never
.VerifyMode: Never
.___v_desugar_6: Never
.TypedDict: Never
.___v_desugar_7 = pyimport "ssltransport"
.ssltransport = pyimport "ssltransport"
.SSLTransportType: Never
.Type__TYPE_PEER_CERT_RET_DICT: ClassType
.Type__TYPE_PEER_CERT_RET_DICT <: Never
.Type__TYPE_PEER_CERT_RET_DICT.subject: Never
.Type__TYPE_PEER_CERT_RET_DICT.subjectAltName: Never
.Type__TYPE_PEER_CERT_RET_DICT.serialNumber: Str



._SSL_VERSION_TO_TLS_VERSION: global::Dict!({Int: Int})
.ssl: Never

.___v_desugar_8: Never
.CERT_REQUIRED: Never
.HAS_NEVER_CHECK_COMMON_NAME: Never
.OP_NO_COMPRESSION: Never
.OP_NO_TICKET: Never
.OPENSSL_VERSION: Never
.OPENSSL_VERSION_NUMBER: Never
.PROTOCOL_TLS: Never
.PROTOCOL_TLS_CLIENT: Never
.VERIFY_X509_STRICT: Never
.OP_NO_SSLv2: Never
.OP_NO_SSLv3: Never
.SSLContext: Never
.TLSVersion: Never
.PROTOCOL_SSLv23: Never
.VERIFY_X509_PARTIAL_CHAIN: Never










.___v_desugar_9 = pyimport "ssltransport"

.SSLTransport: {ssltransport.SSLTransport}
.OP_NO_COMPRESSION: Never
.OP_NO_TICKET: Never
.OP_NO_SSLv2: Never
.OP_NO_SSLv3: Never
.PROTOCOL_SSLv23: Never
.PROTOCOL_TLS: Never

.PROTOCOL_TLS_CLIENT: Never
.VERIFY_X509_PARTIAL_CHAIN: Never
.VERIFY_X509_STRICT: Never

._TYPE_PEER_CERT_RET: Never
.assert_fingerprint: (cert: NoneType or global::Bytes, fingerprint: Str) -> NoneType
.resolve_cert_reqs: (candidate: NoneType or Int or Str) -> Never
.resolve_ssl_version: (candidate: NoneType or Int or Str) -> Int
.create_urllib3_context: (ssl_version: NoneType or Int := NoneType or Int, cert_reqs: NoneType or Int := NoneType or Int, options: NoneType or Int := NoneType or Int, ciphers: NoneType or Str := NoneType or Str, ssl_minimum_version: NoneType or Int := NoneType or Int, ssl_maximum_version: NoneType or Int := NoneType or Int, verify_flags: NoneType or Int := NoneType or Int) -> Never
.ssl_wrap_socket: (sock: Obj, keyfile: NoneType or Str := NoneType or Str, certfile: NoneType or Str := NoneType or Str, cert_reqs: NoneType or Int := NoneType or Int, ca_certs: NoneType or Str := NoneType or Str, server_hostname: NoneType or Str := NoneType or Str, ssl_version: NoneType or Int := NoneType or Int, ciphers: NoneType or Str := NoneType or Str, ssl_context: Obj := Obj, ca_cert_dir: NoneType or Str := NoneType or Str, key_password: NoneType or Str := NoneType or Str, ca_cert_data: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str, tls_in_tls: Obj := Obj) -> Never
.ssl_wrap_socket: (sock: Obj, keyfile: NoneType or Str := NoneType or Str, certfile: NoneType or Str := NoneType or Str, cert_reqs: NoneType or Int := NoneType or Int, ca_certs: NoneType or Str := NoneType or Str, server_hostname: NoneType or Str := NoneType or Str, ssl_version: NoneType or Int := NoneType or Int, ciphers: NoneType or Str := NoneType or Str, ssl_context: Obj := Obj, ca_cert_dir: NoneType or Str := NoneType or Str, key_password: NoneType or Str := NoneType or Str, ca_cert_data: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str, tls_in_tls: Bool := Bool) -> Never
.ssl_wrap_socket: (sock: Obj, keyfile: NoneType or Str := NoneType or Str, certfile: NoneType or Str := NoneType or Str, cert_reqs: NoneType or Int := NoneType or Int, ca_certs: NoneType or Str := NoneType or Str, server_hostname: NoneType or Str := NoneType or Str, ssl_version: NoneType or Int := NoneType or Int, ciphers: NoneType or Str := NoneType or Str, ssl_context: Obj := Obj, ca_cert_dir: NoneType or Str := NoneType or Str, key_password: NoneType or Str := NoneType or Str, ca_cert_data: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str, tls_in_tls: Bool := Bool) -> Never
.is_ipaddress: (hostname: global::Bytes or Str) -> Bool
._is_key_file_encrypted: (key_file: Str) -> Bool
._ssl_wrap_socket_impl: (sock: Obj, ssl_context: Obj, tls_in_tls: Bool, server_hostname: NoneType or Str := NoneType or Str) -> Never
