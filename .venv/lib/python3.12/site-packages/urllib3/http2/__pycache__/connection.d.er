##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/http2/connection.py 1752607604 12694
.___v_desugar_1: Never
.annotations: Never
.logging: Never

.re: Never

.threading: Never

.types: Never

.typing: Never

.h2: Never

.h2: Never

.h2: Never

.___v_desugar_2: Never
._TYPE_BODY: Never
.___v_desugar_3: Never
.HTTPHeaderDict: Never
.___v_desugar_4 = pyimport "connection"
.connection = pyimport "connection"
.HTTPSConnection: Never
._get_default_user_agent: () -> global::Bytes or Str
.___v_desugar_5: Never
.ConnectionError: Never
.___v_desugar_6: Never
.BaseHTTPResponse: Never
.orig_HTTPSConnection: Never
.T: Never
.log: Never
.RE_IS_LEGAL_HEADER_NAME: Never
.RE_IS_ILLEGAL_HEADER_VALUE: Never
._is_legal_header_name: (name: global::Bytes) -> Bool
._is_illegal_header_value: (value: global::Bytes) -> Bool
.Type__LockedObject: ClassType
.Type__LockedObject <: Never
.Type__LockedObject._obj: Never
.Type__LockedObject.lock: Never
.Type__LockedObject.__call__: (obj: Obj) -> connection.Type__LockedObject
.Type__LockedObject.__slots__: global::Tuple([{"lock"}, {"_obj"}])
.Type__LockedObject.__enter__: (self: connection.Type__LockedObject) -> Never
.Type__LockedObject.__exit__: (self: connection.Type__LockedObject, exc_type: Obj, exc_val: global::BaseException or NoneType, exc_tb: Obj) -> NoneType

.HTTP2Connection: ClassType
.HTTP2Connection <: Never
.HTTP2Connection._h2_stream: NoneType or Int
.HTTP2Connection._h2_conn: Never
.HTTP2Connection._headers: global::List!(Never, _: Nat)
.HTTP2Connection.__call__: (host: Str, port: NoneType or Int := NoneType or Int, **kwargs := Obj) -> connection.HTTP2Connection
.HTTP2Connection._new_h2_conn: (self: connection.HTTP2Connection) -> Never
.HTTP2Connection.connect: (self: connection.HTTP2Connection) -> NoneType
.HTTP2Connection.putrequest: (self: connection.HTTP2Connection, method: Str, url: Str, **kwargs := Obj) -> NoneType
.HTTP2Connection.putheader: (self: connection.HTTP2Connection, header: global::Bytes or Str, *values: global::Bytes or Str) -> NoneType
.HTTP2Connection.endheaders: (self: connection.HTTP2Connection, message_body: Obj := Obj) -> NoneType
.HTTP2Connection.send: (self: connection.HTTP2Connection, data: Obj) -> NoneType
.HTTP2Connection.set_tunnel: (self: connection.HTTP2Connection, host: Str, port: NoneType or Int := NoneType or Int, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), scheme: Str := Str) -> NoneType
.HTTP2Connection.getresponse: (self: connection.HTTP2Connection) -> Never
.HTTP2Connection.request: (self: connection.HTTP2Connection, method: Str, url: Str, body: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), preload_content: Bool := Bool, decode_content: Bool := Bool, enforce_content_length: Bool := Bool, **kwargs := Obj) -> NoneType
.HTTP2Connection.close: (self: connection.HTTP2Connection) -> NoneType

.HTTP2Response: ClassType
.HTTP2Response <: Never
.HTTP2Response._data: Never
.HTTP2Response.length_remaining: Never
.HTTP2Response.__call__: (status: Int, headers: Obj, request_url: Str, data: global::Bytes, decode_content: Bool := Bool) -> connection.HTTP2Response
.HTTP2Response.data : (self: connection.HTTP2Response) -> global::Bytes
.HTTP2Response.data: global::Bytes
.HTTP2Response.get_redirect_location: (self: connection.HTTP2Response) -> NoneType
.HTTP2Response.close: (self: connection.HTTP2Response) -> NoneType

