##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/_request_methods.py 1752607604 9931
.___v_desugar_1: Never
.annotations: Never
._json: Never

.typing: Never

.___v_desugar_2: Never
.urlencode: Never
.___v_desugar_3 = pyimport "_base_connection"
._base_connection = pyimport "_base_connection"
._TYPE_BODY: Never
.___v_desugar_4 = pyimport "_collections"
._collections = pyimport "_collections"
.HTTPHeaderDict: {_collections.HTTPHeaderDict}
.___v_desugar_5 = pyimport "filepost"
.filepost = pyimport "filepost"
._TYPE_FIELDS: Never
.encode_multipart_formdata: (fields: Obj, boundary: NoneType or Str := NoneType or Str) -> global::Tuple([global::Bytes, Str])
.___v_desugar_6 = pyimport "response"
.response = pyimport "response"
.BaseHTTPResponse: {response.BaseHTTPResponse}
.__all__: global::List!({"RequestMethods"}, 1)
._TYPE_ENCODE_URL_FIELDS: Never
.RequestMethods: ClassType
.RequestMethods.headers: Never
.RequestMethods.__call__: (headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str)) -> _request_methods.RequestMethods
.RequestMethods._encode_url_methods: global::Set!({"DELETE", "HEAD", "GET", "OPTIONS"}, _: Nat)
.RequestMethods.urlopen: (self: _request_methods.RequestMethods, method: Str, url: Str, body: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), encode_multipart: Bool := Bool, multipart_boundary: NoneType or Str := NoneType or Str, **kw := Obj) -> response.BaseHTTPResponse
.RequestMethods.request: (self: _request_methods.RequestMethods, method: Str, url: Str, body: Obj := Obj, fields: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), json: Obj := Obj, **urlopen_kw := Obj) -> response.BaseHTTPResponse
.RequestMethods.request_encode_url: (self: _request_methods.RequestMethods, method: Str, url: Str, fields: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), **urlopen_kw := Str) -> response.BaseHTTPResponse
.RequestMethods.request_encode_body: (self: _request_methods.RequestMethods, method: Str, url: Str, fields: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), encode_multipart: Bool := Bool and Bool, multipart_boundary: NoneType or Str := {None} and NoneType or Str, **urlopen_kw := Str) -> response.BaseHTTPResponse

