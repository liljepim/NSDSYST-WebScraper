##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/exceptions.py 1752607604 9938
.___v_desugar_1: Never
.annotations: Never
.socket: Never

.typing: Never

.warnings: Never

.___v_desugar_2: Never
.MessageDefect: Never
.___v_desugar_3: Never
.httplib_IncompleteRead: Never

.___v_desugar_4 = pyimport "connection"
.connection = pyimport "connection"
.HTTPConnection: {connection.HTTPConnection}
.___v_desugar_5 = pyimport "connectionpool"
.connectionpool = pyimport "connectionpool"
.ConnectionPool: Never
.___v_desugar_6 = pyimport "response"
.response = pyimport "response"
.HTTPResponse: {response.HTTPResponse}
.___v_desugar_7 = pyimport "retry"
.retry = pyimport "retry"
.Retry: {util.retry.Retry}


.HTTPError: ClassType
.HTTPError <: global::Exception

.HTTPWarning: ClassType
.HTTPWarning <: global::Warning

._TYPE_REDUCE_RESULT: Never
.PoolError: ClassType
exceptions = pyimport "exceptions"
.PoolError <: .HTTPError
.PoolError._message: Never
.PoolError.pool: Never
.PoolError.__call__: (pool: Obj, message: Str) -> exceptions.PoolError
.PoolError.__reduce__: (self: exceptions.PoolError) -> Never

.RequestError: ClassType
.RequestError <: .PoolError
.RequestError.url: Str
.RequestError.__call__: (pool: Obj, url: Str, message: Str) -> exceptions.RequestError
.RequestError.__reduce__: (self: exceptions.RequestError) -> Never

.SSLError: ClassType
.SSLError <: .HTTPError

.ProxyError: ClassType
.ProxyError <: .HTTPError
.ProxyError.original_error: global::Exception
.ProxyError.__call__: (message: Str, error: global::Exception) -> exceptions.ProxyError

.DecodeError: ClassType
.DecodeError <: .HTTPError

.ProtocolError: ClassType
.ProtocolError <: .HTTPError

.ConnectionError: {exceptions.ProtocolError}
.MaxRetryError: ClassType
.MaxRetryError <: .RequestError
.MaxRetryError.reason: NoneType or global::Exception
.MaxRetryError.__call__: (pool: Obj, url: Str, reason: NoneType or global::Exception := NoneType or global::Exception) -> exceptions.MaxRetryError
.MaxRetryError.__reduce__: (self: exceptions.MaxRetryError) -> Never

.HostChangedError: ClassType
.HostChangedError <: .RequestError
.HostChangedError.retries: Int or util.retry.Retry
.HostChangedError.__call__: (pool: Obj, url: Str, retries: Int or util.retry.Retry := Int or util.retry.Retry) -> exceptions.HostChangedError

.TimeoutStateError: ClassType
.TimeoutStateError <: .HTTPError

.TimeoutError: ClassType

.ReadTimeoutError: ClassType
.ReadTimeoutError <: global::TimeoutError

.ConnectTimeoutError: ClassType
.ConnectTimeoutError <: global::TimeoutError

.NewConnectionError: ClassType
.NewConnectionError <: .ConnectTimeoutError
.NewConnectionError._message: Never
.NewConnectionError.conn: connection.HTTPConnection
.NewConnectionError.__call__: (conn: connection.HTTPConnection, message: Str) -> exceptions.NewConnectionError
.NewConnectionError.__reduce__: (self: exceptions.NewConnectionError) -> Never
.NewConnectionError.pool : (self: exceptions.NewConnectionError) -> connection.HTTPConnection
.NewConnectionError.pool: connection.HTTPConnection

.NameResolutionError: ClassType
.NameResolutionError <: .NewConnectionError
.NameResolutionError._host: Never
.NameResolutionError._reason: Never
.NameResolutionError.__call__: (host: Str, conn: connection.HTTPConnection, reason: Obj) -> exceptions.NameResolutionError
.NameResolutionError.__reduce__: (self: exceptions.NameResolutionError) -> Never

.EmptyPoolError: ClassType
.EmptyPoolError <: .PoolError

.FullPoolError: ClassType
.FullPoolError <: .PoolError

.ClosedPoolError: ClassType
.ClosedPoolError <: .PoolError

.LocationValueError: ClassType
.LocationValueError <: global::ValueError

.LocationParseError: ClassType
.LocationParseError <: .LocationValueError
.LocationParseError.location: Str
.LocationParseError.__call__: (location: Str) -> exceptions.LocationParseError

.URLSchemeUnknown: ClassType
.URLSchemeUnknown <: .LocationValueError
.URLSchemeUnknown.scheme: Str
.URLSchemeUnknown.__call__: (scheme: Str) -> exceptions.URLSchemeUnknown

.ResponseError: ClassType
.ResponseError <: .HTTPError
.ResponseError.GENERIC_ERROR: {"too many error responses"}
.ResponseError.SPECIFIC_ERROR: {"too many {status_code} error responses"}

.SecurityWarning: ClassType
.SecurityWarning <: .HTTPWarning

.InsecureRequestWarning: ClassType
.InsecureRequestWarning <: .SecurityWarning

.NotOpenSSLWarning: ClassType
.NotOpenSSLWarning <: .SecurityWarning

.SystemTimeWarning: ClassType
.SystemTimeWarning <: .SecurityWarning

.InsecurePlatformWarning: ClassType
.InsecurePlatformWarning <: .SecurityWarning

.DependencyWarning: ClassType
.DependencyWarning <: .HTTPWarning

.ResponseNotChunked: ClassType
.ResponseNotChunked <: .ProtocolError

.BodyNotHttplibCompatible: ClassType
.BodyNotHttplibCompatible <: .HTTPError

.IncompleteRead: ClassType
.IncompleteRead <: .HTTPError
.IncompleteRead.expected: Int
.IncompleteRead.partial: Int
.IncompleteRead.__call__: (partial: Int, expected: Int) -> exceptions.IncompleteRead
.IncompleteRead.__repr__: (self: exceptions.IncompleteRead) -> Str

.InvalidChunkLength: ClassType
.InvalidChunkLength <: .HTTPError
.InvalidChunkLength.expected: NoneType or Int
.InvalidChunkLength.length: global::Bytes
.InvalidChunkLength.partial: Int
.InvalidChunkLength.response: response.HTTPResponse
.InvalidChunkLength.__call__: (response: response.HTTPResponse, length: global::Bytes) -> exceptions.InvalidChunkLength
.InvalidChunkLength.__repr__: (self: exceptions.InvalidChunkLength) -> Str

.InvalidHeader: ClassType
.InvalidHeader <: .HTTPError

.ProxySchemeUnknown: ClassType
.ProxySchemeUnknown <: global::AssertionError
.ProxySchemeUnknown.__call__: (scheme: NoneType or Str) -> exceptions.ProxySchemeUnknown

.ProxySchemeUnsupported: ClassType
.ProxySchemeUnsupported <: global::ValueError

.HeaderParsingError: ClassType
.HeaderParsingError <: .HTTPError
.HeaderParsingError.__call__: Never

.UnrewindableBodyError: ClassType
.UnrewindableBodyError <: .HTTPError

