##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/__init__.py 1752607604 6979

.___v_desugar_1: Never
.annotations: Never
.logging: Never

.sys: Never

.typing: Never

.warnings: Never

.___v_desugar_2: Never
.NullHandler: Never
.___v_desugar_3 = pyimport "__init__"
.__init__ = pyimport "__init__"
.exceptions: Never
.___v_desugar_4 = pyimport "_base_connection"
._base_connection = pyimport "_base_connection"
._TYPE_BODY: Never
.___v_desugar_5 = pyimport "_collections"
._collections = pyimport "_collections"
.HTTPHeaderDict: {_collections.HTTPHeaderDict}
.___v_desugar_6 = pyimport "_version"
._version = pyimport "_version"
.__version__: {"2.5.0"}
.___v_desugar_7 = pyimport "connectionpool"
.connectionpool = pyimport "connectionpool"
.HTTPConnectionPool: Never
.HTTPSConnectionPool: Never
.connection_from_url: (url: Str, **kw := Obj) -> connectionpool.HTTPConnectionPool
.___v_desugar_8 = pyimport "filepost"
.filepost = pyimport "filepost"
._TYPE_FIELDS: Never
.encode_multipart_formdata: (fields: Obj, boundary: NoneType or Str := NoneType or Str) -> global::Tuple([global::Bytes, Str])
.___v_desugar_9 = pyimport "poolmanager"
.poolmanager = pyimport "poolmanager"
.PoolManager: {poolmanager.PoolManager}
.ProxyManager: {poolmanager.ProxyManager}
.proxy_from_url: (url: Str, **kw := Obj) -> poolmanager.ProxyManager
.___v_desugar_10 = pyimport "response"
.response = pyimport "response"
.BaseHTTPResponse: Never
.HTTPResponse: Never
.___v_desugar_11 = pyimport "request"
.request = pyimport "request"
.make_headers: (keep_alive: NoneType or Bool := NoneType or Bool, accept_encoding: NoneType or Str or Bool or global::List!(Str, _: Nat) := NoneType or Str or Bool or global::List!(Str, _: Nat), user_agent: NoneType or Str := NoneType or Str, basic_auth: NoneType or Str := NoneType or Str, proxy_basic_auth: NoneType or Str := NoneType or Str, disable_cache: NoneType or Bool := NoneType or Bool) -> global::Dict!({Str: Str})
.___v_desugar_12 = pyimport "retry"
.retry = pyimport "retry"
.Retry: {util.retry.Retry}
.___v_desugar_13 = pyimport "timeout"
.timeout = pyimport "timeout"
.Timeout: {timeout.Timeout}
.ssl: Never












.__author__: {"Andrey Petrov (andrey.petrov@shazow.net)"}
.__license__: {"MIT"}
.__version__: {"2.5.0"}
.__all__: global::Tuple([{"HTTPConnectionPool"}, {"HTTPHeaderDict"}, {"HTTPSConnectionPool"}, {"PoolManager"}, {"ProxyManager"}, {"HTTPResponse"}, {"Retry"}, {"Timeout"}, {"add_stderr_logger"}, {"connection_from_url"}, {"disable_warnings"}, {"encode_multipart_formdata"}, {"make_headers"}, {"proxy_from_url"}, {"request"}, {"BaseHTTPResponse"}])

.add_stderr_logger: (level: Int := Int) -> Never



.disable_warnings: (category: Obj := Obj) -> NoneType
._DEFAULT_POOL: poolmanager.PoolManager
.request: (method: Str, url: Str, body: Obj := Obj, fields: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), preload_content: NoneType or Bool := NoneType or Bool, decode_content: NoneType or Bool := NoneType or Bool, redirect: NoneType or Bool := NoneType or Bool, retries: NoneType or Int or util.retry.Retry := NoneType or Int or util.retry.Retry, timeout: Float or timeout.Timeout or NoneType := Float or timeout.Timeout or NoneType, json: Obj := Obj) -> Never

.___v_desugar_14 = pyimport "__init__"

.inject_into_urllib3: () -> NoneType



