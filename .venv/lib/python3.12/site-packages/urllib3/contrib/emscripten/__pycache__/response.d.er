##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/contrib/emscripten/response.py 1752607604 9507
.___v_desugar_1: Never
.annotations: Never
._json: Never

.logging: Never

.typing: Never

.___v_desugar_2: Never
.contextmanager: Never
.___v_desugar_3: Never
.dataclass: Never
.___v_desugar_4: Never
.HTTPException: Never
.___v_desugar_5: Never
.BytesIO: Never
.IOBase: Never
.___v_desugar_6: Never
.InvalidHeader: Never
.TimeoutError: Never
.___v_desugar_7 = pyimport "response"
.response = pyimport "response"
.BaseHTTPResponse: Never
.___v_desugar_8: Never
.Retry: Never
.___v_desugar_9 = pyimport "request"
.request = pyimport "request"
.EmscriptenRequest: {request.EmscriptenRequest}

.___v_desugar_10: Never
.BaseHTTPConnection: Never
.BaseHTTPSConnection: Never


.log: Never
.EmscriptenResponse: ClassType
.EmscriptenResponse.status_code: Int
.EmscriptenResponse.body: Never
.EmscriptenResponse.request: request.EmscriptenRequest
.EmscriptenResponse.headers: global::Dict!({Str: Str})
.EmscriptenResponse.__call__: () -> response.EmscriptenResponse

.EmscriptenHttpResponseWrapper: ClassType
.EmscriptenHttpResponseWrapper <: Never
.EmscriptenHttpResponseWrapper.length_is_certain: Never
.EmscriptenHttpResponseWrapper._closed: Never
.EmscriptenHttpResponseWrapper._connection: Never
.EmscriptenHttpResponseWrapper.length_remaining: Never
.EmscriptenHttpResponseWrapper._body: Never
.EmscriptenHttpResponseWrapper._response: Never
.EmscriptenHttpResponseWrapper._pool: Never
.EmscriptenHttpResponseWrapper._url: Never
.EmscriptenHttpResponseWrapper.__call__: (internal_response: response.EmscriptenResponse, url: NoneType or Str := NoneType or Str, connection: Obj := Obj) -> response.EmscriptenHttpResponseWrapper
.EmscriptenHttpResponseWrapper.url : (self: response.EmscriptenHttpResponseWrapper) -> NoneType or Str
.EmscriptenHttpResponseWrapper.url: NoneType or Str
.EmscriptenHttpResponseWrapper.url: (self: response.EmscriptenHttpResponseWrapper, url: NoneType or Str) -> NoneType
.EmscriptenHttpResponseWrapper.connection : (self: response.EmscriptenHttpResponseWrapper) -> Never
.EmscriptenHttpResponseWrapper.connection: Never
.EmscriptenHttpResponseWrapper.retries : (self: response.EmscriptenHttpResponseWrapper) -> Never
.EmscriptenHttpResponseWrapper.retries: Never
.EmscriptenHttpResponseWrapper.retries: (self: response.EmscriptenHttpResponseWrapper, retries: Obj) -> NoneType
.EmscriptenHttpResponseWrapper.stream: (self: response.EmscriptenHttpResponseWrapper, amt: NoneType or Int := NoneType or Int, decode_content: NoneType or Bool := NoneType or Bool) -> NoneType
.EmscriptenHttpResponseWrapper._init_length: (self: response.EmscriptenHttpResponseWrapper, request_method: NoneType or Str) -> NoneType or Int
.EmscriptenHttpResponseWrapper.read: (self: response.EmscriptenHttpResponseWrapper, amt: NoneType or Int := NoneType or Int, decode_content: NoneType or Bool := NoneType or Bool, cache_content: Bool := Bool and Bool) -> global::Bytes
.EmscriptenHttpResponseWrapper.read_chunked: (self: response.EmscriptenHttpResponseWrapper, amt: NoneType or Int := NoneType or Int, decode_content: NoneType or Bool := NoneType or Bool) -> NoneType
.EmscriptenHttpResponseWrapper.release_conn: (self: response.EmscriptenHttpResponseWrapper) -> NoneType
.EmscriptenHttpResponseWrapper.drain_conn: (self: response.EmscriptenHttpResponseWrapper) -> NoneType
.EmscriptenHttpResponseWrapper.data : (self: response.EmscriptenHttpResponseWrapper) -> global::Bytes
.EmscriptenHttpResponseWrapper.data: global::Bytes
.EmscriptenHttpResponseWrapper.json: (self: response.EmscriptenHttpResponseWrapper) -> Never
.EmscriptenHttpResponseWrapper.close: (self: response.EmscriptenHttpResponseWrapper) -> NoneType
.EmscriptenHttpResponseWrapper._error_catcher: (self: response.EmscriptenHttpResponseWrapper) -> Structural(global::ContextManager)

