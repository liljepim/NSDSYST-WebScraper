##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/contrib/emscripten/connection.py 1752607604 8771
.___v_desugar_1: Never
.annotations: Never
.os: Never

.typing: Never

.___v_desugar_2: Never
.HTTPException: Never
.___v_desugar_3: Never
.ResponseNotReady: Never
.___v_desugar_4: Never
._TYPE_BODY: Never
.___v_desugar_5 = pyimport "connection"
.connection = pyimport "connection"
.HTTPConnection: Never
.ProxyConfig: Never
.port_by_scheme: global::Indexable(Obj, Never)
.___v_desugar_6: Never
.TimeoutError: Never
.___v_desugar_7 = pyimport "response"
.response = pyimport "response"
.BaseHTTPResponse: Never
.___v_desugar_8: Never
._TYPE_SOCKET_OPTIONS: Never
.___v_desugar_9: Never
._DEFAULT_TIMEOUT: Never
._TYPE_TIMEOUT: Never
.___v_desugar_10: Never
.Url: Never
.___v_desugar_11 = pyimport "fetch"
.fetch = pyimport "fetch"
._RequestError: Never
._TimeoutError: Never
.send_request: (request: request.EmscriptenRequest) -> response.EmscriptenResponse
.send_streaming_request: (request: request.EmscriptenRequest) -> NoneType or response.EmscriptenResponse
.___v_desugar_12 = pyimport "request"
.request = pyimport "request"
.EmscriptenRequest: {request.EmscriptenRequest}
.___v_desugar_13 = pyimport "response"

.EmscriptenHttpResponseWrapper: {response.EmscriptenHttpResponseWrapper}
.EmscriptenResponse: {response.EmscriptenResponse}

.___v_desugar_14: Never
.BaseHTTPConnection: Never
.BaseHTTPSConnection: Never


.EmscriptenHTTPConnection: ClassType
.EmscriptenHTTPConnection.timeout: NoneType or Float
.EmscriptenHTTPConnection.port: Int
.EmscriptenHTTPConnection._closed: Never
.EmscriptenHTTPConnection.scheme: Never
.EmscriptenHTTPConnection.proxy_config: Never
.EmscriptenHTTPConnection.default_socket_options: Never
.EmscriptenHTTPConnection.blocksize: Int
.EmscriptenHTTPConnection._response: NoneType or response.EmscriptenResponse
.EmscriptenHTTPConnection.proxy: Never
.EmscriptenHTTPConnection.socket_options: Never
.EmscriptenHTTPConnection.host: Str
.EmscriptenHTTPConnection.source_address: Never
.EmscriptenHTTPConnection.is_verified: Never
.EmscriptenHTTPConnection.__call__: (host: Str, port: Int := Int, timeout: Obj := Obj, source_address: NoneType or global::Tuple([Str, Int]) := NoneType or global::Tuple([Str, Int]), blocksize: Int := Int, socket_options: Obj := Obj, proxy: Obj := Obj, proxy_config: Obj := Obj) -> connection.EmscriptenHTTPConnection
.EmscriptenHTTPConnection.default_port: Never
.EmscriptenHTTPConnection.is_verified: Bool
.EmscriptenHTTPConnection.proxy_is_verified: NoneType or Bool
.EmscriptenHTTPConnection.set_tunnel: (self: connection.EmscriptenHTTPConnection, host: Str, port: NoneType or Int := NoneType or Int, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), scheme: Str := Str) -> NoneType
.EmscriptenHTTPConnection.connect: (self: connection.EmscriptenHTTPConnection) -> NoneType
.EmscriptenHTTPConnection.request: (self: connection.EmscriptenHTTPConnection, method: Str, url: Str, body: Obj := Obj, headers: NoneType or global::Mapping(Str, Str) := NoneType or global::Mapping(Str, Str), chunked: Bool := Bool, preload_content: Bool := Bool, decode_content: Bool := Bool, enforce_content_length: Bool := Bool) -> NoneType
.EmscriptenHTTPConnection.getresponse: (self: connection.EmscriptenHTTPConnection) -> Never
.EmscriptenHTTPConnection.close: (self: connection.EmscriptenHTTPConnection) -> NoneType
.EmscriptenHTTPConnection.is_closed : (self: connection.EmscriptenHTTPConnection) -> Bool
.EmscriptenHTTPConnection.is_closed: Bool
.EmscriptenHTTPConnection.is_connected : (self: connection.EmscriptenHTTPConnection) -> Bool
.EmscriptenHTTPConnection.is_connected: Bool
.EmscriptenHTTPConnection.has_connected_to_proxy : (self: connection.EmscriptenHTTPConnection) -> Bool
.EmscriptenHTTPConnection.has_connected_to_proxy: Bool

.EmscriptenHTTPSConnection: ClassType
.EmscriptenHTTPSConnection <: .EmscriptenHTTPConnection
.EmscriptenHTTPSConnection.ssl_context: Never
.EmscriptenHTTPSConnection.scheme: Never
.EmscriptenHTTPSConnection.ca_cert_data: NoneType or global::Bytes or Str
.EmscriptenHTTPSConnection.ca_cert_dir: NoneType or Str
.EmscriptenHTTPSConnection.ssl_minimum_version: NoneType or Int
.EmscriptenHTTPSConnection.server_hostname: NoneType or Str
.EmscriptenHTTPSConnection.ca_certs: NoneType or Str
.EmscriptenHTTPSConnection.is_verified: Never
.EmscriptenHTTPSConnection.assert_hostname: Never
.EmscriptenHTTPSConnection.cert_file: NoneType or Str
.EmscriptenHTTPSConnection.cert_reqs: NoneType or Int or Str
.EmscriptenHTTPSConnection.ssl_version: NoneType or Int or Str
.EmscriptenHTTPSConnection.key_file: NoneType or Str
.EmscriptenHTTPSConnection.assert_fingerprint: NoneType or Str
.EmscriptenHTTPSConnection.ssl_maximum_version: NoneType or Int
.EmscriptenHTTPSConnection.key_password: NoneType or Str
.EmscriptenHTTPSConnection.__call__: (host: Str, port: Int := Int, timeout: Obj := Obj, source_address: NoneType or global::Tuple([Str, Int]) := NoneType or global::Tuple([Str, Int]), blocksize: Int := Int, socket_options: Obj := Obj, proxy: Obj := Obj, proxy_config: Obj := Obj, cert_reqs: NoneType or Int or Str := NoneType or Int or Str, assert_hostname: NoneType or Str := NoneType or Str, assert_fingerprint: NoneType or Str := NoneType or Str, server_hostname: NoneType or Str := NoneType or Str, ssl_context: Obj := Obj, ca_certs: NoneType or Str := NoneType or Str, ca_cert_dir: NoneType or Str := NoneType or Str, ca_cert_data: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str, ssl_minimum_version: NoneType or Int := NoneType or Int, ssl_maximum_version: NoneType or Int := NoneType or Int, ssl_version: NoneType or Int or Str := NoneType or Int or Str, cert_file: NoneType or Str := NoneType or Str, key_file: NoneType or Str := NoneType or Str, key_password: NoneType or Str := NoneType or Str) -> connection.EmscriptenHTTPSConnection
.EmscriptenHTTPSConnection.default_port: Never
.EmscriptenHTTPSConnection.cert_reqs: NoneType or Int or Str
.EmscriptenHTTPSConnection.ca_certs: NoneType or Str
.EmscriptenHTTPSConnection.ca_cert_dir: NoneType or Str
.EmscriptenHTTPSConnection.ca_cert_data: NoneType or global::Bytes or Str
.EmscriptenHTTPSConnection.ssl_version: NoneType or Int or Str
.EmscriptenHTTPSConnection.ssl_minimum_version: NoneType or Int
.EmscriptenHTTPSConnection.ssl_maximum_version: NoneType or Int
.EmscriptenHTTPSConnection.assert_fingerprint: NoneType or Str
.EmscriptenHTTPSConnection.set_cert: (self: connection.EmscriptenHTTPSConnection, key_file: NoneType or Str := NoneType or Str, cert_file: NoneType or Str := NoneType or Str, cert_reqs: NoneType or Int or Str := NoneType or Int or Str, key_password: NoneType or Str := NoneType or Str, ca_certs: NoneType or Str := NoneType or Str, assert_hostname: NoneType or Str := NoneType or Str, assert_fingerprint: NoneType or Str := NoneType or Str, ca_cert_dir: NoneType or Str := NoneType or Str, ca_cert_data: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str) -> NoneType


._supports_http_protocol: Never
._supports_https_protocol: Never


