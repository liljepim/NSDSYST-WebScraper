##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/urllib3/contrib/emscripten/fetch.py 1752607604 23484

.___v_desugar_1: Never
.annotations: Never
.io: Never

.json: Never

.___v_desugar_2: Never
.Parser: Never
.___v_desugar_3: Never
.files: Never
.___v_desugar_4: Never
.TYPE_CHECKING: Never
.Any: Never
.js: Never

.___v_desugar_5: Never
.JsArray: Never
.JsException: Never
.JsProxy: Never
.to_js: Never

.___v_desugar_6 = pyimport "typing_extensions"
.typing_extensions = pyimport "typing_extensions"
.Buffer: Never


.___v_desugar_7 = pyimport "request"
.request = pyimport "request"
.EmscriptenRequest: {request.EmscriptenRequest}
.___v_desugar_8 = pyimport "response"
.response = pyimport "response"
.EmscriptenResponse: {response.EmscriptenResponse}

.HEADERS_TO_IGNORE: {Type_v_global_66440: global::Tuple([Str]) | Type_v_global_66440 == ("user-agent")}
.SUCCESS_HEADER: {-1}
.SUCCESS_EOF: {-2}
.ERROR_TIMEOUT: {-3}
.ERROR_EXCEPTION: {-4}
._STREAMING_WORKER_CODE: Never
.Type__RequestError: ClassType
.Type__RequestError <: global::Exception
.Type__RequestError.message: NoneType or Str
.Type__RequestError.request: NoneType or request.EmscriptenRequest
.Type__RequestError.response: NoneType or response.EmscriptenResponse
.Type__RequestError.__call__: (message: NoneType or Str := NoneType or Str, request: NoneType or request.EmscriptenRequest := NoneType or request.EmscriptenRequest, response: NoneType or response.EmscriptenResponse := NoneType or response.EmscriptenResponse) -> fetch.Type__RequestError

.Type__StreamingError: ClassType
fetch = pyimport "fetch"
.Type__StreamingError <: .Type__RequestError

.Type__TimeoutError: ClassType
.Type__TimeoutError <: .Type__RequestError

._obj_from_dict: Never
.Type__ReadStream: ClassType
.Type__ReadStream <: Never
.Type__ReadStream.timeout: Float
.Type__ReadStream.connection_id: Int
.Type__ReadStream.worker: Never
.Type__ReadStream.byte_buffer: Never
.Type__ReadStream.int_buffer: Never
.Type__ReadStream.read_len: Never
.Type__ReadStream._is_closed: Never
.Type__ReadStream.is_live: Never
.Type__ReadStream.request: request.EmscriptenRequest
.Type__ReadStream.read_pos: Never
.Type__ReadStream.__call__: (int_buffer: Obj, byte_buffer: Obj, timeout: Float, worker: Obj, connection_id: Int, request: request.EmscriptenRequest) -> fetch.Type__ReadStream
.Type__ReadStream.__del__: (self: fetch.Type__ReadStream) -> NoneType
.Type__ReadStream.is_closed: (self: fetch.Type__ReadStream) -> Bool
.Type__ReadStream.closed : (self: fetch.Type__ReadStream) -> Bool
.Type__ReadStream.closed: Bool
.Type__ReadStream.close: (self: fetch.Type__ReadStream) -> NoneType
.Type__ReadStream.readable: (self: fetch.Type__ReadStream) -> Bool
.Type__ReadStream.writable: (self: fetch.Type__ReadStream) -> Bool
.Type__ReadStream.seekable: (self: fetch.Type__ReadStream) -> Bool
.Type__ReadStream.readinto: (self: fetch.Type__ReadStream, byte_obj: Obj) -> Int

.Type__StreamingFetcher: ClassType
.Type__StreamingFetcher.streaming_ready: Never
.Type__StreamingFetcher.js_worker: Never
.Type__StreamingFetcher.js_worker_ready_promise: Never
.Type__StreamingFetcher.__call__: () -> fetch.Type__StreamingFetcher
.Type__StreamingFetcher.send: (self: fetch.Type__StreamingFetcher, request: request.EmscriptenRequest) -> response.EmscriptenResponse

.Type__JSPIReadStream: ClassType
.Type__JSPIReadStream <: Never
.Type__JSPIReadStream.timeout: Float
.Type__JSPIReadStream.js_abort_controller: Never
.Type__JSPIReadStream.js_read_stream: Never
.Type__JSPIReadStream._is_done: Never
.Type__JSPIReadStream.current_buffer_pos: Never
.Type__JSPIReadStream.current_buffer: Never
.Type__JSPIReadStream._is_closed: Never
.Type__JSPIReadStream.request: request.EmscriptenRequest
.Type__JSPIReadStream.response: response.EmscriptenResponse
.Type__JSPIReadStream.__call__: (js_read_stream: Obj, timeout: Float, request: request.EmscriptenRequest, response: response.EmscriptenResponse, js_abort_controller: Obj) -> fetch.Type__JSPIReadStream
.Type__JSPIReadStream.__del__: (self: fetch.Type__JSPIReadStream) -> NoneType
.Type__JSPIReadStream.is_closed: (self: fetch.Type__JSPIReadStream) -> Bool
.Type__JSPIReadStream.closed : (self: fetch.Type__JSPIReadStream) -> Bool
.Type__JSPIReadStream.closed: Bool
.Type__JSPIReadStream.close: (self: fetch.Type__JSPIReadStream) -> NoneType
.Type__JSPIReadStream.readable: (self: fetch.Type__JSPIReadStream) -> Bool
.Type__JSPIReadStream.writable: (self: fetch.Type__JSPIReadStream) -> Bool
.Type__JSPIReadStream.seekable: (self: fetch.Type__JSPIReadStream) -> Bool
.Type__JSPIReadStream._get_next_buffer: (self: fetch.Type__JSPIReadStream) -> Bool
.Type__JSPIReadStream.readinto: (self: fetch.Type__JSPIReadStream, byte_obj: Obj) -> Int

.is_in_browser_main_thread: () -> Bool
.is_cross_origin_isolated: () -> Bool
.is_in_node: () -> Bool
.is_worker_available: () -> Bool
._fetcher: NoneType or fetch.Type__StreamingFetcher






.NODE_JSPI_ERROR: {"urllib3 only works in Node.js with pyodide.runPythonAsync and requires the flag --experimental-wasm-stack-switching in  versions of node <24."}
.send_streaming_request: (request: request.EmscriptenRequest) -> NoneType or response.EmscriptenResponse
._SHOWN_TIMEOUT_WARNING: {False}
._show_timeout_warning: () -> NoneType
._SHOWN_STREAMING_WARNING: {False}
._show_streaming_warning: () -> NoneType
.send_request: (request: request.EmscriptenRequest) -> response.EmscriptenResponse
.send_jspi_request: (request: request.EmscriptenRequest, streaming: Bool) -> response.EmscriptenResponse
._run_sync_with_timeout: (promise: Obj, timeout: Float, js_abort_controller: Obj, request: NoneType or request.EmscriptenRequest, response: NoneType or response.EmscriptenResponse) -> Never
.has_jspi: () -> Bool
._is_node_js: () -> Bool
.streaming_ready: () -> NoneType or Bool
.wait_for_streaming_ready: () -> Bool
