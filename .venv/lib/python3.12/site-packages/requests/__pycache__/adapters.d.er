##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/requests/adapters.py 1752607605 27451

.os: Never

.socket: Never

.typing: Never

.warnings: Never

.___v_desugar_1 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.ClosedPoolError: Never
.ConnectTimeoutError: Never
.___v_desugar_2 = pyimport "exceptions"

._HTTPError: {exceptions.HTTPError}
.___v_desugar_3 = pyimport "exceptions"

._InvalidHeader: {exceptions.InvalidHeader}
.___v_desugar_4 = pyimport "exceptions"

.LocationValueError: Never
.MaxRetryError: Never
.NewConnectionError: Never
.ProtocolError: Never
.___v_desugar_5 = pyimport "exceptions"

._ProxyError: {exceptions.ProxyError}
.___v_desugar_6 = pyimport "exceptions"

.ReadTimeoutError: Never
.ResponseError: Never
.___v_desugar_7 = pyimport "exceptions"

._SSLError: {exceptions.SSLError}
.___v_desugar_8 = pyimport "poolmanager"
.poolmanager = pyimport "poolmanager"
.PoolManager: {poolmanager.PoolManager}
.proxy_from_url: (url: Str, **kw := Obj) -> poolmanager.ProxyManager
.___v_desugar_9 = pyimport "__init__"
.__init__ = pyimport "__init__"
.TimeoutSauce: {timeout.Timeout}
.___v_desugar_10 = pyimport "__init__"

.parse_url: (url: Str) -> util.url.Url
.___v_desugar_11 = pyimport "retry"
.retry = pyimport "retry"
.Retry: {util.retry.Retry}
.___v_desugar_12 = pyimport "ssl_"
.ssl_ = pyimport "ssl_"
.create_urllib3_context: (ssl_version: NoneType or Int := NoneType or Int, cert_reqs: NoneType or Int := NoneType or Int, options: NoneType or Int := NoneType or Int, ciphers: NoneType or Str := NoneType or Str, ssl_minimum_version: NoneType or Int := NoneType or Int, ssl_maximum_version: NoneType or Int := NoneType or Int, verify_flags: NoneType or Int := NoneType or Int) -> Never
.___v_desugar_13 = pyimport "auth"
.auth = pyimport "auth"
._basic_auth_str: Never
.___v_desugar_14 = pyimport "compat"
.compat = pyimport "compat"
.basestring: global::Tuple([{Str}, {global::Bytes}])
.urlparse: Never
.___v_desugar_15 = pyimport "cookies"
.cookies = pyimport "cookies"
.extract_cookies_to_jar: |Type_105432: Type, Type_105433: Type, Type_104984 <: Structural({.extract_cookies = (self: Obj, ?105431, ?105432) -> ?105433}), Type_105431: Type|(jar: Type_104984, request: Obj, response: Structural({._original_response = Never})) -> Type_105433
.___v_desugar_16 = pyimport "exceptions"

.ConnectionError: {global::ConnectionError}
.ConnectTimeout: {exceptions.ConnectTimeout}
.InvalidHeader: {exceptions.InvalidHeader}
.InvalidProxyURL: {exceptions.InvalidProxyURL}
.InvalidSchema: {exceptions.InvalidSchema}
.InvalidURL: {exceptions.InvalidURL}
.ProxyError: {exceptions.ProxyError}
.ReadTimeout: {exceptions.ReadTimeout}
.RetryError: {exceptions.RetryError}
.SSLError: {exceptions.SSLError}
.___v_desugar_17 = pyimport "models"
.models = pyimport "models"
.Response: Never
.___v_desugar_18 = pyimport "structures"
.structures = pyimport "structures"
.CaseInsensitiveDict: {structures.CaseInsensitiveDict}
.___v_desugar_19 = pyimport "utils"
.utils = pyimport "utils"
.DEFAULT_CA_BUNDLE_PATH: Never
.extract_zipped_paths: Never
.get_auth_from_url: Never
.get_encoding_from_headers: Never
.prepend_scheme_if_needed: Never
.select_proxy: Never
.urldefragauth: Never
.___v_desugar_20 = pyimport "socks"
.socks = pyimport "socks"
.SOCKSProxyManager: {urllib3.contrib.socks.SOCKSProxyManager}



.___v_desugar_21 = pyimport "models"

.PreparedRequest: Never


.DEFAULT_POOLBLOCK: {False}
.DEFAULT_POOLSIZE: {10}
.DEFAULT_RETRIES: {0}
.DEFAULT_POOL_TIMEOUT: {None}
.ssl: Never

._preloaded_ssl_context: Never

._preloaded_ssl_context: Never

._urllib3_request_context: (request: Obj, verify: Obj, client_cert: Obj, poolmanager: poolmanager.PoolManager) -> Never
.BaseAdapter: ClassType
.BaseAdapter.__call__: () -> adapters.BaseAdapter
.BaseAdapter.send: (self: adapters.BaseAdapter, request: Obj, stream: Obj := Obj, timeout: Obj := Obj, verify: Obj := Obj, cert: Obj := Obj, proxies: Obj := Obj) -> NoneType
.BaseAdapter.close: (self: adapters.BaseAdapter) -> NoneType

.HTTPAdapter: ClassType
adapters = pyimport "adapters"
.HTTPAdapter <: .BaseAdapter
.HTTPAdapter.config: Never
.HTTPAdapter._pool_maxsize: Never
.HTTPAdapter.poolmanager: Never
.HTTPAdapter._pool_block: Never
.HTTPAdapter.proxy_manager: Never
.HTTPAdapter._pool_connections: Never
.HTTPAdapter.__call__: (pool_connections: Obj := Obj, pool_maxsize: Obj := Obj, max_retries: Obj := Obj, pool_block: Obj := Obj) -> adapters.HTTPAdapter
.HTTPAdapter.__attrs__: global::List!({"_pool_connections", "config", "_pool_block", "_pool_maxsize", "max_retries"}, 5)
.HTTPAdapter.__getstate__: (self: adapters.HTTPAdapter) -> global::Dict!({Never: Never})
.HTTPAdapter.__setstate__: |Type_105591 <: Structural({.items = (self: Obj) -> ?107738}), Type_107738: Type|(self: adapters.HTTPAdapter, state: Type_105591) -> NoneType
.HTTPAdapter.init_poolmanager: (self: adapters.HTTPAdapter, connections: Obj, maxsize: Obj, block: Obj := Obj, **pool_kwargs := Obj) -> NoneType
.HTTPAdapter.proxy_manager_for: |Type_107812: Type, Type_108262 <: Structural({.lower = (self: Obj) -> ?107812})|(self: adapters.HTTPAdapter, proxy: Type_108262, **proxy_kwargs := Obj) -> Never
.HTTPAdapter.cert_verify: |Type_107877: Type, Type_107866: Type, Type_107867: Type, Type_105610 <: Structural({.ca_cert_dir = ?107867 and ?107877; .ca_certs = ?107866 and ?107876; .cert_file = ?V and ?107908; .cert_reqs = ?107852 and ?107875; .key_file = ?V and ?107909}), V: Type, Type_107875: Type, Type_107876: Type, Type_107852: Type, Type_107909: Type, Type_107908: Type|(self: adapters.HTTPAdapter, conn: Type_105610, url: Structural({.lower = (self: Obj) -> global::Bytes or Str}), verify: Bool, cert: Never) -> NoneType
.HTTPAdapter.build_response: |Type_107961: Type, Type_105621 <: Structural({.url = ?107961 and ?107962}), Type_107962: Type|(self: adapters.HTTPAdapter, req: Type_105621, resp: Structural({._original_response = Never})) -> Never
.HTTPAdapter.build_connection_pool_key_attributes: (self: adapters.HTTPAdapter, request: Obj, verify: Obj, cert: Obj := Obj) -> Never
.HTTPAdapter.get_connection_with_tls_context: |Type_105631 <: Structural({.url = ?107998}), Type_107998 <: Ref(Obj)|(self: adapters.HTTPAdapter, request: Type_105631, verify: Obj, proxies: Obj := Obj, cert: Obj := Obj) -> Never
.HTTPAdapter.get_connection: (self: adapters.HTTPAdapter, url: Obj, proxies: Obj := Obj) -> Never
.HTTPAdapter.close: (self: adapters.HTTPAdapter) -> NoneType
.HTTPAdapter.request_url: |Type_105669 <: Structural({.url = ?108226 and ?108227; .path_url = global::Bytes or Str}), Type_108226 <: Ref(Obj), Type_108227 <: Ref(Obj)|(self: adapters.HTTPAdapter, request: Type_105669, proxies: Obj) -> global::Bytes or Str
.HTTPAdapter.add_headers: (self: adapters.HTTPAdapter, request: Obj, **kwargs := Never) -> NoneType
.HTTPAdapter.proxy_headers: |Type_107812: Type, Type_108262 <: Structural({.lower = (self: Obj) -> ?107812})|(self: adapters.HTTPAdapter, proxy: Type_108262) -> global::Dict!({Str: Never})
.HTTPAdapter.send: |Type_108226 <: Ref(Obj), Type_108387: Type, Type_108428: Type, Type_108429: Type, Type_108430: Type, Type_108227 <: Ref(Obj), Type_105673 <: Structural({.body = ?108386 and ?108429; .url = ?Type_108226 and ?Type_108227; .path_url = global::Bytes or Str; .method = ?108428; .headers = ?108387 and ?108430}), Type_108386: Type|(self: adapters.HTTPAdapter, request: Type_105673, stream: Never := Never, timeout: Never := Never, verify: Never := Never, cert: Never := Never, proxies: Never := Never) -> Never

