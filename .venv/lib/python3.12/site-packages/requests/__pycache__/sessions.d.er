##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/requests/sessions.py 1752607605 30495

.os: Never

.sys: Never

.time: Never

.___v_desugar_1: Never
.OrderedDict: Never
.___v_desugar_2: Never
.timedelta: Never
.___v_desugar_3 = pyimport "_internal_utils"
._internal_utils = pyimport "_internal_utils"
.to_native_string: (string: global::Bytes, encoding: Str := Str) -> Str
.___v_desugar_4 = pyimport "adapters"
.adapters = pyimport "adapters"
.HTTPAdapter: {adapters.HTTPAdapter}
.___v_desugar_5 = pyimport "auth"
.auth = pyimport "auth"
._basic_auth_str: Never
.___v_desugar_6 = pyimport "compat"
.compat = pyimport "compat"
.Mapping: Never
.cookielib: Never
.urljoin: Never
.urlparse: Never
.___v_desugar_7 = pyimport "cookies"
.cookies = pyimport "cookies"
.RequestsCookieJar: {cookies.RequestsCookieJar}
.cookiejar_from_dict: |Type_105087 <: cookies.RequestsCookieJar|(cookie_dict: Obj, cookiejar: Type_105087 := Type_105087, overwrite: Structural({.__or__ = (self: Never, Obj) -> Bool}) := {True} and Structural({.__or__ = (self: Never, Obj) -> Bool})) -> Type_105087
.extract_cookies_to_jar: |Type_105432: Type, Type_105433: Type, Type_104984 <: Structural({.extract_cookies = (self: Obj, ?105431, ?105432) -> ?105433}), Type_105431: Type|(jar: Type_104984, request: Obj, response: Structural({._original_response = Never})) -> Type_105433
.merge_cookies: |Type_105087 <: cookies.RequestsCookieJar|(cookiejar: Type_105087, cookies: Obj) -> Type_105087
.___v_desugar_8 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.ChunkedEncodingError: {exceptions.ChunkedEncodingError}
.ContentDecodingError: {exceptions.ContentDecodingError}
.InvalidSchema: {exceptions.InvalidSchema}
.TooManyRedirects: {exceptions.TooManyRedirects}
.___v_desugar_9 = pyimport "hooks"
.hooks = pyimport "hooks"
.default_hooks: () -> global::Dict!({Never: Never})
.dispatch_hook: |Type_73321 :> {Type_v_global_26414: Obj | Type_v_global_26414 != None}, R: Type, O: Type, O <: Structural({.__or__ = (self: Never, ?R) -> ?O})|(key: Obj, hooks: O, hook_data: Type_73321, **kwargs := Obj) -> Type_73321
.___v_desugar_10 = pyimport "models"
.models = pyimport "models"
.DEFAULT_REDIRECT_LIMIT: Never
.REDIRECT_STATI: Never
.PreparedRequest: Never
.Request: Never
.___v_desugar_11 = pyimport "status_codes"
.status_codes = pyimport "status_codes"
structures = pyimport "structures"
.codes: structures.LookupDict
.___v_desugar_12 = pyimport "structures"

.CaseInsensitiveDict: {structures.CaseInsensitiveDict}
.___v_desugar_13 = pyimport "utils"
.utils = pyimport "utils"
.DEFAULT_PORTS: Never
.default_headers: Never
.get_auth_from_url: Never
.get_environ_proxies: Never
.get_netrc_auth: Never
.requote_uri: Never
.resolve_proxies: Never
.rewind_body: Never
.should_bypass_proxies: Never
.to_key_val_list: Never

.preferred_clock: Never

.preferred_clock: Never


.merge_setting: ||Never
.merge_hooks: ||Never
.SessionRedirectMixin: ClassType
.SessionRedirectMixin.__call__: () -> sessions.SessionRedirectMixin
.SessionRedirectMixin.get_redirect_target: |Type_108572 <: Structural({.is_redirect = ?109223; .headers = ?Self}), K: Type, Self <: global::Indexable(?K, ?V), Type_109223 <: Bool, V: Type|(self: sessions.SessionRedirectMixin, resp: Type_108572) -> {None}
.SessionRedirectMixin.should_strip_auth: (self: sessions.SessionRedirectMixin, old_url: Obj, new_url: Obj) -> Bool
.SessionRedirectMixin.resolve_redirects: |Type_109644 :> {False}|(self: sessions.Session, resp: Never, req: Structural({.url = Ref(Obj); .copy = (self: Obj) -> sessions.Session}), stream: Type_109644 := {False} and Type_109644, timeout: Type_109644 := {None} and Type_109644, verify: Type_109644 := {True} and Type_109644, cert: Type_109644 := {None} and Type_109644, proxies: Type_109644 := {None} and Type_109644, yield_requests: Bool := {False} and Bool, **adapter_kwargs := Obj) -> NoneType
.SessionRedirectMixin.rebuild_auth: |Type_108576: Type, Type_109598: Type, T: Type, Type_109625: Type, Type_108596 <: Structural({.url = ?Type_108576; .prepare_auth = (self: Obj, ?109625) -> ?T; .headers = ?109598})|(self: sessions.Session, prepared_request: Type_108596, response: Never) -> NoneType
.SessionRedirectMixin.rebuild_proxies: |Type_109655 <: Ref(Obj), Type_109654: Type, Type_109644 :> {False}, Type_108599 <: Structural({.url = ?109655; .headers = ?109654})|(self: sessions.Session, prepared_request: Type_108599, proxies: Type_109644) -> Type_109644
.SessionRedirectMixin.rebuild_method: |Type_109486 <: Ref(Obj), Type_109450: Type, Type_109444 <: Structural({.__len__ = (self: Never) -> Nat}), Type_109372: Type, Type_109223 <: Bool, Type_109438: Type, Type_109523 <: Structural({._original_response = Never}), Type_109439: Type, E: Type, K :> Str, Type_109713 <: Structural({.is_redirect = ?Type_109223; .url = ?109464 and ?109486; .history = ?109372 and ?109444; .content = ?109438; .raw = ?109439 and ?109523; .close = (self: Obj) -> ?109450; .headers = ?Self; .status_code = ?E}), Type_109464 <: Ref(Obj), Self <: global::Indexable(?K, ?V), V <: Str|(self: sessions.Session, prepared_request: sessions.Session, response: Type_109713) -> NoneType

.Session: ClassType
sessions = pyimport "sessions"
.Session <: RedirectMixin
.Session.cert: Never
.Session.auth: Never
.Session.proxies: Never
.Session.stream: Never
.Session.params: Never
.Session.adapters: Never
.Session.headers: Never
.Session.verify: Never
.Session.max_redirects: Never
.Session.cookies: Never
.Session.trust_env: Never
.Session.hooks: Never
.Session.__call__: () -> sessions.Session
.Session.__attrs__: global::List!({"proxies", "headers", "trust_env", "stream", "cert", "max_redirects", "verify", "adapters", "hooks", "auth", "params", "cookies"}, 12)
.Session.__enter__: |Type_108607 <: sessions.Session|(self: Type_108607) -> Type_108607
.Session.__exit__: (self: sessions.Session, *args: Obj) -> NoneType
.Session.prepare_request: |Type_109771: Type, Self <: global::Indexable(?K, ?V), Type_108612 <: Structural({.json = ?109806; .auth = ?Type_108561; .files = ?109804; .data = ?109805; .url = ?109798 and ?109803; .params = ?Type_108561; .cookies = ?109771; .headers = ?Type_108561; .method = ?109801; .hooks = ?109843}), Type_109805: Type, Type_109806: Type, Type_108561: Type, Type_109798 <: Ref(Obj), Type_109843 <: ?Self or global::GenericDict or global::List(?T, ?N), K: Type, T: Type, Type_109801: Type, V: Type, Type_109803: Type, Type_109804: Type, N: Nat|(self: sessions.Session, request: Type_108612) -> Never
.Session.request: |R :> global::Dict!({?109903: ?109904}), Type_109898: Type, O: Type, V: Type, Type_109899: Type, Type_109903: Type, Type_109904: Type, Type_108615 <: Structural({.upper = (self: Obj) -> ?109895}), O <: Structural({.__or__ = (self: Never, ?R) -> ?O}), R :> global::Dict!({?109898: ?109899}), R: Type, Type_109895: Type, V <: Str|(self: sessions.Session, method: Type_108615, url: Obj, params: Structural({.__or__ = (self: Never, R) -> O}) := {None} and Structural({.__or__ = (self: Never, R) -> O}), data: Structural({.__or__ = (self: Never, R) -> O}) := {None} and Structural({.__or__ = (self: Never, R) -> O}), headers: Obj := {None}, cookies: Obj := {None}, files: Obj := {None}, auth: Obj := {None}, timeout: V := {None} and V, allow_redirects: V := {True} and V, proxies: O := {None} and O, hooks: Obj := {None}, stream: Never := Never, verify: Never := Never, cert: Never := Never, json: Obj := {None}) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, V); .status_code = Never})
.Session.get: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.options: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.head: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.post: (self: sessions.Session, url: Obj, data: Structural({.__or__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__or__ = (self: Never, Obj) -> Never}), json: Obj := {None}, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.put: (self: sessions.Session, url: Obj, data: Structural({.__or__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__or__ = (self: Never, Obj) -> Never}), **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.patch: (self: sessions.Session, url: Obj, data: Structural({.__or__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__or__ = (self: Never, Obj) -> Never}), **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.delete: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.send: |Type_108580 <: Structural({.url = ?109346; .copy = (self: Obj) -> sessions.Session}), Type_109346 <: Ref(Obj)|(self: sessions.Session, request: Type_108580, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, Str); .status_code = Never})
.Session.merge_environment_settings: |Type_108561 <: global::Dict!(?D), Type_108561 <: RefMut(Never), O: Type, Type_108561 <: RefMut(?Type_108561), O <: Structural({.__or__ = (self: Never, ?R) -> ?O}), Type_108561 <: RefMut(?Type_108561), D: global::GenericDict, R: Type, Type_108561 <: RefMut(?Type_108561), Type_108561: Type|(self: sessions.Session, url: Obj, proxies: O, stream: Type_108561, verify: Type_108561, cert: Type_108561) -> global::Dict!({{"proxies"}: Type_108561, {"cert"}: Type_108561, {"verify"}: Type_108561, {"stream"}: Type_108561})
.Session.get_adapter: |Type_111032 <: Structural({.lower = (self: Obj) -> ?111429}), Type_111429: Type|(self: sessions.Session, url: Type_111032) -> Never
.Session.close: (self: sessions.Session) -> NoneType
.Session.mount: |Type_108698 <: Structural({.__len__ = (self: Never) -> Nat})|(self: sessions.Session, prefix: Type_108698, adapter: Obj) -> NoneType
.Session.__getstate__: (self: sessions.Session) -> global::Dict!({Never: Never})
.Session.__setstate__: |Type_108703 <: Structural({.items = (self: Obj) -> ?111502}), Type_111502: Type|(self: sessions.Session, state: Type_108703) -> NoneType

.session: () -> sessions.Session
