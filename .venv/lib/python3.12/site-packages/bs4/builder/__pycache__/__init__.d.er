##[pylyzer] failed /home/jepi/Documents/NSDSYST-MCO2/.venv/lib/python3.12/site-packages/bs4/builder/__init__.py 1752607605 31130
.___v_desugar_1: Never
.annotations: Never
.__license__: {"MIT"}
.___v_desugar_2: Never
.defaultdict: Never
.re: Never

.___v_desugar_3: Never
.GeneticModule: Never
.___v_desugar_4: Never
.Any: Never
.cast: Never
.Dict: Never
.Iterable: Never
.List: Never
.Optional: Never
.Pattern: Never
.Set: Never
.Tuple: Never
.Type: Never
.TYPE_CHECKING: Never
.warnings: Never

.sys: Never

.___v_desugar_5 = pyimport "element"
.element = pyimport "element"
.AttributeDict: Never
.AttributeValueList: Never
.CharsetMetaAttributeValue: Never
.ContentMetaAttributeValue: Never
.RubyParenthesisString: Never
.RubyTextString: Never
.Stylesheet: Never
.Script: Never
.TemplateString: Never
.nonwhitespace_re: Never
.___v_desugar_6 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.ParserRejectedMarkup: {bs4.exceptions.ParserRejectedMarkup}
.___v_desugar_7 = pyimport "_typing"
._typing = pyimport "_typing"
._AttributeValues: Never
._RawAttributeValue: Never
.___v_desugar_8 = pyimport "_warnings"
._warnings = pyimport "_warnings"
.XMLParsedAsHTMLWarning: {bs4._warnings.XMLParsedAsHTMLWarning}

.___v_desugar_9 = pyimport "__init__"
.__init__ = pyimport "__init__"
.BeautifulSoup: {bs4.BeautifulSoup}
.___v_desugar_10 = pyimport "element"

.NavigableString: {element.NavigableString}
.Tag: {element.Tag}
.___v_desugar_11 = pyimport "_typing"

._AttributeValue: Never
._Encoding: Never
._Encodings: Never
._RawOrProcessedAttributeValues: Never
._RawMarkup: Never


.__all__: global::List!({"TreeBuilder", "TreeBuilderRegistry", "SAXTreeBuilder", "HTMLTreeBuilder"}, 4)
.FAST: {"fast"}
.PERMISSIVE: {"permissive"}
.STRICT: {"strict"}
.XML: {"xml"}
.HTML: {"html"}
.HTML_5: {"html5"}
.__all__: global::List!({"HTMLTreeBuilder", "TreeBuilderRegistry", "ParserRejectedMarkup", "DetectsXMLParsedAsHTML", "TreeBuilder"}, 5)
.TreeBuilderRegistry: ClassType
.TreeBuilderRegistry <: Obj
.TreeBuilderRegistry.builders: Never
.TreeBuilderRegistry.builders_for_feature: Never
.TreeBuilderRegistry.__call__: () -> __init__.TreeBuilderRegistry
.TreeBuilderRegistry.register: |T: Type, T <: Structural({.features = ?127243}), Type_127243 <: global::Iterable(?T)|(self: __init__.TreeBuilderRegistry, treebuilder_class: T) -> NoneType
.TreeBuilderRegistry.lookup: (self: __init__.TreeBuilderRegistry, *features: Str) -> NoneType

.builder_registry: .TreeBuilderRegistry
.TreeBuilder: ClassType
.TreeBuilder <: Obj
.TreeBuilder.string_containers: Never
.TreeBuilder.soup: Never
.TreeBuilder.preserve_whitespace_tags: global::Set!(Str, _: Nat)
.TreeBuilder.store_line_numbers: Bool
.TreeBuilder.cdata_list_attributes: Never
.TreeBuilder.attribute_dict_class: Never
.TreeBuilder.attribute_value_list_class: Never
.TreeBuilder.tracks_line_numbers: Bool
.TreeBuilder.__call__: Never
.TreeBuilder.USE_DEFAULT: Never
.TreeBuilder.NAME: {"[Unknown tree builder]"}
.TreeBuilder.ALTERNATE_NAMES: Never
.TreeBuilder.features: global::Iterable(Str)
.TreeBuilder.is_xml: Bool
.TreeBuilder.picklable: Bool
.TreeBuilder.empty_element_tags: NoneType or global::Set!(Str, _: Nat)
.TreeBuilder.DEFAULT_CDATA_LIST_ATTRIBUTES: Never
.TreeBuilder.DEFAULT_PRESERVE_WHITESPACE_TAGS: Never
.TreeBuilder.DEFAULT_STRING_CONTAINERS: Never
.TreeBuilder.DEFAULT_EMPTY_ELEMENT_TAGS: {None}
.TreeBuilder.TRACKS_LINE_NUMBERS: {False}
.TreeBuilder.initialize_soup: (self: __init__.TreeBuilder, soup: bs4.BeautifulSoup) -> NoneType
.TreeBuilder.reset: (self: __init__.TreeBuilder) -> NoneType
.TreeBuilder.can_be_empty_element: (self: __init__.TreeBuilder, tag_name: Str) -> Bool
.TreeBuilder.feed: (self: __init__.TreeBuilder, markup: Obj) -> NoneType
.TreeBuilder.prepare_markup: Never
.TreeBuilder.test_fragment_to_document: (self: __init__.TreeBuilder, fragment: Str) -> Str
.TreeBuilder.set_up_substitutions: (self: __init__.TreeBuilder, tag: Obj) -> Bool
.TreeBuilder._replace_cdata_list_attribute_values: (self: __init__.TreeBuilder, tag_name: Str, attrs: Obj) -> Never

.SAXTreeBuilder: ClassType
.SAXTreeBuilder <: .TreeBuilder
.SAXTreeBuilder.__call__: (*args: Obj, **kwargs := Obj) -> __init__.SAXTreeBuilder
.SAXTreeBuilder.feed: (self: __init__.SAXTreeBuilder, markup: Obj) -> NoneType
.SAXTreeBuilder.close: (self: __init__.SAXTreeBuilder) -> NoneType
.SAXTreeBuilder.startElement: (self: __init__.SAXTreeBuilder, name: Str, attrs: global::Dict!({Str: Str})) -> NoneType
.SAXTreeBuilder.endElement: (self: __init__.SAXTreeBuilder, name: Str) -> NoneType
.SAXTreeBuilder.startElementNS: (self: __init__.SAXTreeBuilder, nsTuple: global::Tuple([Str, Str]), nodeName: Str, attrs: global::Dict!({Str: Str})) -> NoneType
.SAXTreeBuilder.endElementNS: (self: __init__.SAXTreeBuilder, nsTuple: global::Tuple([Str, Str]), nodeName: Str) -> NoneType
.SAXTreeBuilder.startPrefixMapping: (self: __init__.SAXTreeBuilder, prefix: Str, nodeValue: Str) -> NoneType
.SAXTreeBuilder.endPrefixMapping: (self: __init__.SAXTreeBuilder, prefix: Str) -> NoneType
.SAXTreeBuilder.characters: (self: __init__.SAXTreeBuilder, content: Str) -> NoneType
.SAXTreeBuilder.startDocument: (self: __init__.SAXTreeBuilder) -> NoneType
.SAXTreeBuilder.endDocument: (self: __init__.SAXTreeBuilder) -> NoneType

.HTMLTreeBuilder: ClassType
.HTMLTreeBuilder <: .TreeBuilder
.HTMLTreeBuilder.DEFAULT_EMPTY_ELEMENT_TAGS: Never
.HTMLTreeBuilder.DEFAULT_BLOCK_ELEMENTS: Never
.HTMLTreeBuilder.DEFAULT_STRING_CONTAINERS: Never
.HTMLTreeBuilder.DEFAULT_CDATA_LIST_ATTRIBUTES: Never
.HTMLTreeBuilder.DEFAULT_PRESERVE_WHITESPACE_TAGS: Never
.HTMLTreeBuilder.set_up_substitutions: (self: __init__.HTMLTreeBuilder, tag: Obj) -> Bool

.DetectsXMLParsedAsHTML: ClassType
.DetectsXMLParsedAsHTML <: Obj
.DetectsXMLParsedAsHTML._first_processing_instruction: Never
.DetectsXMLParsedAsHTML._root_tag_name: Never
.DetectsXMLParsedAsHTML.LOOKS_LIKE_HTML: Never
.DetectsXMLParsedAsHTML.LOOKS_LIKE_HTML_B: Never
.DetectsXMLParsedAsHTML.XML_PREFIX: {"<?xml"}
.DetectsXMLParsedAsHTML.XML_PREFIX_B: Never
.DetectsXMLParsedAsHTML.warn_if_markup_looks_like_xml: |Type_127518 <: Str, O: Type, Type_122289 <: Structural({.XML_PREFIX = ?127518; .LOOKS_LIKE_HTML_B = ?127513; .LOOKS_LIKE_HTML = ?127520; ._warn = (self: Obj, stacklevel := ?O) -> ?127531; .XML_PREFIX_B = ?127511}), Type_127520: Type, Type_127511 <: global::Bytes, Type_127513: Type, Type_127531: Type|(cls: Type_122289, markup: Obj, stacklevel: Int := {3} and Int) -> Bool
.DetectsXMLParsedAsHTML._warn: (cls: Obj, stacklevel: Int := Int) -> NoneType
.DetectsXMLParsedAsHTML._initialize_xml_detector: (self: __init__.DetectsXMLParsedAsHTML) -> NoneType
.DetectsXMLParsedAsHTML._document_might_be_xml: (self: __init__.DetectsXMLParsedAsHTML, processing_instruction: Str) -> NoneType
.DetectsXMLParsedAsHTML._root_tag_encountered: (self: __init__.DetectsXMLParsedAsHTML, name: Str) -> NoneType

.register_treebuilders_from: (module: Obj) -> NoneType
.___v_desugar_12 = pyimport "__init__"

._htmlparser: Never

.___v_desugar_13 = pyimport "__init__"

._html5lib: Never



.___v_desugar_14 = pyimport "__init__"

._lxml: Never



